// <auto-generated />
using MakeItOptimal.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MakeItOptimal.Persistance.Migrations
{
    [DbContext(typeof(MakeItOptimalDbContext))]
    [Migration("20240505171358_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MakeItOptimal.Models.Entities.ToDoBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MakeItOptimal.Models.Entities.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<int>("ToDoBoardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToDoBoardId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("MakeItOptimal.Models.Entities.ToDoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ToDoListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("MakeItOptimal.Models.Entities.ToDoList", b =>
                {
                    b.HasOne("MakeItOptimal.Models.Entities.ToDoBoard", "ToDoBoardRef")
                        .WithMany("Lists")
                        .HasForeignKey("ToDoBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoBoardRef");
                });

            modelBuilder.Entity("MakeItOptimal.Models.Entities.ToDoTask", b =>
                {
                    b.HasOne("MakeItOptimal.Models.Entities.ToDoList", "ToDoListRef")
                        .WithMany("Tasks")
                        .HasForeignKey("ToDoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoListRef");
                });

            modelBuilder.Entity("MakeItOptimal.Models.Entities.ToDoBoard", b =>
                {
                    b.Navigation("Lists");
                });

            modelBuilder.Entity("MakeItOptimal.Models.Entities.ToDoList", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
